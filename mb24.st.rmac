; Copyright 2024 Jean-Baptiste M. "JBQ" "Djaybee" Queru
;
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU Affero General Public License as
; published by the Free Software Foundation, either version 3 of the
; License, or (at your option) any later version.
;
; As an added restriction, if you make the program available for
; third parties to use on hardware you own (or co-own, lease, rent,
; or otherwise control,) such as public gaming cabinets (whether or
; not in a gaming arcade, whether or not coin-operated or otherwise
; for a fee,) the conditions of section 13 will apply even if no
; network is involved.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
; GNU Affero General Public License for more details.
;
; You should have received a copy of the GNU Affero General Public License
; along with this program. If not, see <https://www.gnu.org/licenses/>.
;
; SPDX-License-Identifier: AGPL-3.0-or-later

; Coding style:
;	- ASCII
;	- hard tabs, 8 characters wide, except in ASCII art
;	- 120 columns overall
;	- Standalone block comments in the first 80 columns
;	- Code-related block comments allowed in the last 80 columns
;	- Note: rulers at 40, 80 and 120 columns help with source width
;
;	- Assembler directives are .lowercase
;	- Mnemomics and registers are UPPERCASE
;	- Global symbols for code are CamelCase
;	- Symbols for variables are snake_case
;	- Symbols for hardware registers are ALL_CAPS
;	- Related symbols start with the same prefix (so they sort together)
;	- hexadecimal constants are lowercase ($eaf00d).
;
;	- Include but comment out instructions that help readability but
;		don't do anything (e.g. redundant CLC on 6502 when the carry is
;		guaranteed already to be clear). The comment symbol should be
;		where the instruction would be, i.e. not on the first column.
;		There should be an explanation in a comment.

	.68000
	.text

	PEA.L	SupEntr
	MOVE.W	#38,-(SP)
	TRAP	#14
	ADDQ.L	#6,SP

	MOVE.W	#0,-(SP)
	TRAP	#1

SupEntr:
	MOVE.W	#$2700,SR

	MOVE.B	#0,$fffffa07.w
	MOVE.B	#0,$fffffa09.w

	MOVE.L	#VBL_Handler,$70.w

	MOVE.L	#fb_raw,D0
	ADD.L	#$ff,D0
	AND.L	#$ffffff00,D0

	MOVE.L	D0,fb_front
	ADD.L	#32000,D0
	MOVE.L	D0,fb_back

	MOVE.L	#$FC0000,vert_read

	STOP	#$2300

	MOVE.B	#2,$ffff820a.w
	MOVE.B	#0,$ffff8260.w

	MOVE.W	#$700,$ffff8242.w

MainLoop:
	STOP	#$2300

	MOVE.L	fb_front,D0
	MOVE.L	fb_back,fb_front
	MOVE.L	D0,fb_back
	LSR.L	#8,D0
	MOVE.B	D0,$ffff8203.w
	LSR.L	#8,D0
	MOVE.B	D0,$ffff8201.w

	MOVEA.L	fb_back,A0
	MOVEA.L	vert_read,A1
	ADDQ.W	#4,A1
	MOVE.L	A1,vert_read
	.rept	200
	MOVE.W	(A1)+,(A0)
	ADDA.W	#160,A0
	.endr

	BRA	MainLoop

VBL_Handler:
	RTE

	.bss

	.even
fb_front:
	.ds.l	1
fb_back:
	.ds.l	1

vert_read:
	ds.l	1

fb_raw:
	.ds.b	64255

	.end
